fun main () {
    //***********************************************************************************************************
    //Напишите программу, которая считывает переменную типа Double и выводит её значение, уменьшенное на единицу

    //print(scan.nextDouble() - 1)

    //***********************************************************************************************************
    //Напишите программу, которая считывает две переменных типа Double и выводит:
    //1."Да", если округлённые по правилам математики значения переменных равны
    //2."Нет" в обратном случае

//    var a = Math.round(scan.nextDouble())
//    var b = Math.round(scan.nextDouble())
//    if (a==b) print("Да")
//    else print("Нет")

    //***********************************************************************************************************
    //Напишите программу, которая считывает четыре переменных типа Int и выводит максимальное из них


//    val e = Math.max(scan.nextInt(), scan.nextInt())
//    val f = Math.max(scan.nextInt(), scan.nextInt())
//    print(Math.max(e, f))

    //***********************************************************************************************************
    //Напишите программу, которая считывает четыре переменных типа Int и переменную EE типа Boolean. И выводит:
    //Если E = true, то минимальное из этих чисел
    //Иначе - максимальное.
    //NB! При наличии нескольких минимумов/максимумов выводим ровно одно из них.

//    val a = scan.nextInt()
//    val b = scan.nextInt()
//    val c = scan.nextInt()
//    val d = scan.nextInt()
//    when (scan.nextBoolean()) {
//        true -> print (Math.min(Math.min(a, b), Math.min(c, d)))
//        false -> print (Math.max(Math.max(a, b), Math.max(c, d)))
//    }

    //***********************************************************************************************************
    //***********************************************************************************************************
    //***********************************************************************************************************

}